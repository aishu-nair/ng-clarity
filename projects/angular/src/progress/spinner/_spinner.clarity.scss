/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
@use '../../image/icons.clarity';
@use '../../utils/mixins';
@use '../../utils/variables/variables.global';
@use 'variables.spinner' as spinner-variables;

@include mixins.exports('spinner.clarity') {
  .spinner {
    // spinner-lg is the default
    position: relative;
    display: inline-block;
    @include mixins.min-equilateral(variables.$clr_baselineRem_3);
    animation: spin 1s linear infinite;
    margin: 0;
    padding: 0;
    text-indent: variables.$clr_baselineRem_3;
    overflow: clip;
    overflow-clip-margin: border-box;
    white-space: nowrap;
    border-radius: 50%;
    border: 5px solid;
    border-color: rgba(spinner-variables.$clr-spinner-bg-color, spinner-variables.$clr-spinner-opacity);
    box-sizing: border-box;

    &::before,
    &::after {
      content: '';
      position: absolute;
      @include mixins.min-equilateral(variables.$clr_baselineRem_3);
      border-radius: 50%;
      clip: rect(
        0rem,
        variables.$clr_baselineRem_3,
        variables.$clr_baselineRem_3 / 2,
        variables.$clr_baselineRem_3 / 2
      );
      top: -5px;
      left: -5px;
      border: 5px solid spinner-variables.$clr-spinner-color;
      box-sizing: border-box;
    }

    &::before {
      transform: rotate(270deg);
    }
    &::after {
      transform: rotate(220deg);
    }

    &.spinner-md {
      border-width: 3px;
      &::after,
      &::before {
        clip: rect(
          0rem,
          variables.$clr_baselineRem_1_5,
          variables.$clr_baselineRem_1_5 / 2,
          variables.$clr_baselineRem_1_5 / 2
        );
        border-width: 3px;
        top: -3px;
        left: -3px;
        @include mixins.min-equilateral(variables.$clr_baselineRem_1_5);
      }
      text-indent: variables.$clr_baselineRem_1_5;
      @include mixins.min-equilateral(variables.$clr_baselineRem_1_5);
    }

    &.spinner-inline,
    &.spinner-sm {
      border-width: 2.5px;
      &::after,
      &::before {
        clip: rect(
          0rem,
          variables.$clr_baselineRem_0_75,
          variables.$clr_baselineRem_0_75 / 2,
          variables.$clr_baselineRem_0_75 / 2
        );
        border-width: 2.5px;
        top: -2.5px;
        left: -2.5px;
        @include mixins.min-equilateral(variables.$clr_baselineRem_0_75);
      }
      text-indent: variables.$clr_baselineRem_0_75;
      @include mixins.min-equilateral(variables.$clr_baselineRem_0_75);
    }

    &.spinner-inline {
      vertical-align: text-bottom; //To align with text properly
    }

    &.spinner-inverse {
      // TODO: get ux input on direction here
      &::after,
      &::before {
        border-color: #74c1e2;
      }
      border-color: rgba(spinner-variables.$clr-spinner-inverse-bg-color, spinner-variables.$clr-spinner-opacity);
    }

    &.spinner-neutral-0 {
      // needed for loading banner alerts in core
      &::after,
      &::before {
        border-color: #ffffff;
      }
      border-color: rgba(transparent, 1);
    }

    &.spinner-check {
      animation: none;
      border-color: rgba(spinner-variables.$clr-spinner-color, spinner-variables.$clr-spinner-opacity);
    }
  }

  //Spinners inside of small buttons
  .btn-sm {
    .spinner {
      @include mixins.min-equilateral(variables.$clr_baselineRem_0_5416);
    }
  }

  .btn-icon:not(.btn-sm) {
    .spinner {
      @include mixins.min-equilateral(variables.$clr_baselineRem_0_65);
    }
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
}
